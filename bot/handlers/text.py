# bot/handlers/text.py
import telebot
from telebot import types
# –ù–ï –ü–û–¢–†–Ü–ë–ù–û: from bot.analysis.text_analyzer import TextAnalyzer # –ú–∏ –æ—Ç—Ä–∏–º—É—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –∑ main
from functools import partial # –î–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —É —Ö–µ–Ω–¥–ª–µ—Ä–∏

# –§—É–Ω–∫—Ü—ñ—è, —â–æ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—ñ—Å–ª—è register_next_step_handler
def process_text_for_analysis(message: types.Message, bot_instance: telebot.TeleBot, analyzer): # –î–æ–¥–∞–ª–∏ analyzer
    """–û–±—Ä–æ–±–ª—è—î —Ç–µ–∫—Å—Ç, –Ω–∞–¥—ñ—Å–ª–∞–Ω–∏–π –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É."""
    if message.content_type == 'text':
        # !!! –í–∏–∫–ª–∏–∫ –†–ï–ê–õ–¨–ù–û–ì–û –∞–Ω–∞–ª—ñ–∑–∞—Ç–æ—Ä–∞ !!!
        analysis_result = analyzer.analyze(message.text) # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–µ—Ä–µ–¥–∞–Ω–∏–π analyzer

        # –§–æ—Ä–º—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
        confidence_percent = analysis_result.get('confidence', 0.0) * 100
        if analysis_result.get("is_disinformation"):
             response = f"–ê–Ω–∞–ª—ñ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–æ:\n" \
                        f"üî¥ –°—Ö–æ–∂–µ –Ω–∞ –¥–µ–∑—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é ({confidence_percent:.0f}%)"
        elif "error" in analysis_result:
             response = f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∞–Ω–∞–ª—ñ–∑—É: {analysis_result['error']}"
        else:
             response = f"–ê–Ω–∞–ª—ñ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–æ:\n" \
                        f"üü¢ –û–∑–Ω–∞–∫ –¥–µ–∑—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –Ω–µ –≤–∏—è–≤–ª–µ–Ω–æ ({100 - confidence_percent:.0f}% –≤–ø–µ–≤–Ω–µ–Ω–æ—Å—Ç—ñ —É –ø—Ä–æ—Ç–∏–ª–µ–∂–Ω–æ–º—É)."

        bot_instance.send_message(message.chat.id, response)
    else:
        bot_instance.send_message(message.chat.id, "–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É.")
        # –ü–æ–≤—Ç–æ—Ä–Ω–æ –≤–∏–∫–ª–∏–∫–∞—î–º–æ –∑–∞–ø–∏—Ç, –ø–µ—Ä–µ–¥–∞—é—á–∏ —Ç–æ–π —Å–∞–º–∏–π –∞–Ω–∞–ª—ñ–∑–∞—Ç–æ—Ä
        request_text_input(message, bot_instance, analyzer)

# –§—É–Ω–∫—Ü—ñ—è, —â–æ —Ä–µ–∞–≥—É—î –Ω–∞ –∫–Ω–æ–ø–∫—É –∞–±–æ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É
def request_text_input(message: types.Message, bot_instance: telebot.TeleBot, analyzer): # –î–æ–¥–∞–ª–∏ analyzer
    """–ó–∞–ø–∏—Ç—É—î —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É."""
    invite_text = "–î–æ–±—Ä–µ, –Ω–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ —Ç–µ–∫—Å—Ç, —è–∫–∏–π –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏."
    markup = types.ForceReply(selective=False)
    sent_msg = bot_instance.send_message(message.chat.id, invite_text, reply_markup=markup)
    # –†–µ—î—Å—Ç—Ä—É—î–º–æ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –∫—Ä–æ–∫, –ø–µ—Ä–µ–¥–∞—é—á–∏ bot_instance —Ç–∞ analyzer
    # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ partial –¥–ª—è —Ñ—ñ–∫—Å–∞—Ü—ñ—ó –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ bot_instance —Ç–∞ analyzer
    process_func = partial(process_text_for_analysis, bot_instance=bot_instance, analyzer=analyzer)
    bot_instance.register_next_step_handler(sent_msg, process_func)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó —Ü–∏—Ö –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
def register_text_handlers(bot_instance: telebot.TeleBot, analyzer): # –ü—Ä–∏–π–º–∞—î analyzer
    # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ partial –¥–ª—è –ø–µ—Ä–µ–¥–∞—á—ñ bot_instance —Ç–∞ analyzer
    request_func = partial(request_text_input, bot_instance=bot_instance, analyzer=analyzer)
    bot_instance.register_message_handler(
        request_func,
        func=lambda message: message.text == '–ê–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —Ç–µ–∫—Å—Ç'
    )